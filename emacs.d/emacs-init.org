#+Title: Emacs configuration
#+Author: sondr3

* My Emacs settings
  This is my emacs settings that are continously evolving... and I'm a newbie so
  I don't really know what I'm doing either.

** NOTE
   This file is automagically tangled into a =emacs-init.el= file so no editing that file.

* Package management
  I have no idea how that works, but apparently [[https://github.com/rdallasgray/pallet][Pallet]] and [[https://github.com/cask/cask][Cask]] is the new
  hotness in Emacsland. I will also be using the excellent [[https://github.com/jwiegley/use-package][use-package]] along
  with [[https://github.com/edvorg/req-package][req-package]] for some real package management goodness. Good golly.

* Core settings

** Make sure the path loads properly on OS X
   This depends on the [[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]] package so it will properly load the
   path.

#+BEGIN_SRC emacs-lisp
  (when (memq window-system '(mac ns))
    (exec-path-from-shell-initialize))
#+END_SRC

** Encoding
   UTF-8 ALL THE THINGS!

#+BEGIN_SRC emacs-lisp
  (setq locale-coding-system 'utf-8)
  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (set-language-environment "UTF-8")
  (prefer-coding-system 'utf-8)
#+END_SRC

** Some general settings
   Common sense settings really, most of these are pretty basic and shouldn't
   contain any magic. Most things are also comments just in case. 

*** Settings some defaults
#+BEGIN_SRC emacs-lisp
  (setq
   x-select-enable-clipboard t           ;; allow pasting outside Emacs
   global-auto-revert-non-file-buffers t ;; auto refresh dired quietly
   auto-revert-verbose nil
   echo-keystrokes 0.1                   ;; show keystrokes in progress
   delete-by-moving-to-trash t           ;; does what it says
   jump-char-lazy-highlight-face nil     ;; don't highlight matches with jump-char
   line-number-mode t                    ;; display line numbers
   column-number-mode t                  ;; and columns
   fill-column 80                        ;; lines should be 80 chars wide
   gc-cons-threshold 20000000            ;; we have tons of memory now, don't be greedy
   enable-recursive-minibuffers t        ;; let minibuffers be recursive
   visible-bell t                        ;; hide that ding ding
   font-lock-maximum-decoration t        ;; decorate all buffers with colors
   color-theme-is-global t               ;; does what it says
   truncate-partial-width-windows nil    ;; truncate buffers
   tab-always-indent 'complete           ;; tab before indenting
   require-final-newline t               ;; always add a newline when saving
   show-paren-delay 0                    ;; because saving miliseconds is woreth it
   load-prefer-newer t                   ;; prefer newer .el files to .elc
   )

  (setq-default
   tab-width 4
   indent-tabs-mode nil                  ;; indent with spaces and not tabs
   fill-column 80                        ;; max 80 characters wide
   auto-fill-function 'do-auto-fill      ;; automatically wrap long lines
   )
#+END_SRC

*** Global modes
#+BEGIN_SRC emacs-lisp
  (show-paren-mode t)    ;; show matching paranthesises
  (blink-cursor-mode -1) ;; don't blink the cursor
#+END_SRC

*** IDO Mode
#+BEGIN_SRC emacs-lisp
  (require 'ido)
  (ido-mode t)
#+END_SRC

*** Assorted commands
    Mostly commands that annoy the hell out of me, like trying to undo and being
    asked repeadedly if you wanted to downcase it instead. Blerh.
#+BEGIN_SRC emacs-lisp
  (put 'downcase-region 'disabled nil)
  (put 'upcase-region 'disabled nil)
  (put 'narrow-to-region 'disabled nil)
  (put 'erase-buffer 'disable 'nil)
#+END_SRC

* Appearance
  Now comes the time to make sure Emacs starts looking dashin'.

** Bars, bars
   There's no need for the menubar/toolbar/scrollbar or splash screen so these are all hidden.

#+BEGIN_SRC emacs-lisp
  (if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
  (if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
  (if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
  (setq inhibit-startup-message t)
#+END_SRC

** Fonts
   I've currently settled for using Inconsolata for Emacs and terminals
   alike, it's a great font that's very easily readable and also works well with
   code and numbers.

#+BEGIN_SRC emacs-lisp
  (set-default-font "Monaco")
  (set-face-attribute 'default nil
                      :family "Monaco"
                      :height 120
                      :weight 'normal
                      :width 'normal)
#+END_SRC




